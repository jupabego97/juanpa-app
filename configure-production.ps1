# Configurar JuanPA para Producci√≥n
# PowerShell Script

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "    CONFIGURAR JUANPA PARA PRODUCCION" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

Write-Host "Este script te ayudar√° a configurar la URL de Railway en tu frontend." -ForegroundColor Yellow
Write-Host ""

# Solicitar URL de Railway
$railwayUrl = Read-Host "Ingresa la URL completa de tu aplicaci√≥n en Railway (ej: https://mi-app.railway.app)"

if ([string]::IsNullOrWhiteSpace($railwayUrl)) {
    Write-Host "‚ùå ERROR: URL requerida" -ForegroundColor Red
    Read-Host "Presiona Enter para salir"
    exit 1
}

# Validar formato de URL
if (-not $railwayUrl.StartsWith("https://")) {
    Write-Host "‚ö†Ô∏è  ADVERTENCIA: La URL deber√≠a comenzar con https://" -ForegroundColor Yellow
    $confirm = Read-Host "¬øContinuar de todos modos? (y/N)"
    if ($confirm -ne "y" -and $confirm -ne "Y") {
        exit 1
    }
}

Write-Host ""
Write-Host "üîß Configurando frontend para usar: $railwayUrl" -ForegroundColor Green
Write-Host ""

try {
    # Actualizar vercel.json
    Write-Host "üìù Actualizando vercel.json..." -ForegroundColor Blue
    $vercelPath = "frontend/vercel.json"
    if (Test-Path $vercelPath) {
        $content = Get-Content $vercelPath -Raw
        $content = $content -replace 'https://tu-app-name\.railway\.app', $railwayUrl
        Set-Content $vercelPath $content
        Write-Host "‚úÖ vercel.json actualizado" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  vercel.json no encontrado" -ForegroundColor Yellow
    }

    # Crear archivo .env.local para desarrollo
    Write-Host "üìù Creando .env.local..." -ForegroundColor Blue
    $envContent = @"
# Configuraci√≥n para usar Railway en desarrollo local
VITE_API_URL=$railwayUrl/api/v1
VITE_APP_TITLE=JuanPA - Repetici√≥n Espaciada
VITE_APP_VERSION=1.1.0
VITE_ENVIRONMENT=development
VITE_DEV_CONSOLE_LOGS=true
"@
    Set-Content "frontend/.env.local" $envContent
    Write-Host "‚úÖ .env.local creado" -ForegroundColor Green

    Write-Host ""
    Write-Host "üéâ ¬°Configuraci√≥n completada exitosamente!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìÅ Archivos actualizados:" -ForegroundColor Cyan
    Write-Host "  - frontend/vercel.json (para deployment en Vercel)" -ForegroundColor White
    Write-Host "  - frontend/.env.local (para desarrollo local con Railway)" -ForegroundColor White
    Write-Host ""
    Write-Host "üöÄ Pr√≥ximos pasos:" -ForegroundColor Cyan
    Write-Host "  1. Hacer commit y push de los cambios:" -ForegroundColor White
    Write-Host "     git add . && git commit -m 'Configure production URLs'" -ForegroundColor Gray
    Write-Host "  2. Desplegar frontend a Vercel:" -ForegroundColor White
    Write-Host "     cd frontend && vercel --prod" -ForegroundColor Gray
    Write-Host "  3. O ejecutar localmente con Railway:" -ForegroundColor White
    Write-Host "     cd frontend && npm run dev" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üîó Tu aplicaci√≥n estar√° disponible en:" -ForegroundColor Cyan
    Write-Host "  Backend:  $railwayUrl" -ForegroundColor White
    Write-Host "  Frontend: https://tu-app.vercel.app (despu√©s del deploy)" -ForegroundColor White

} catch {
    Write-Host "‚ùå Error durante la configuraci√≥n: $($_.Exception.Message)" -ForegroundColor Red
    Read-Host "Presiona Enter para salir"
    exit 1
}

Write-Host ""
Read-Host "Presiona Enter para continuar" 